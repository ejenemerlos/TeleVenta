<?xml version="1.0"?>
<doc>
<assembly>
<name>
flxEntity
</name>
</assembly>
<members>
<member name="T:FLEXYGO.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:FLEXYGO.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:FLEXYGO.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="T:FLEXYGO.Objects.ICollection">
 <summary>
 Interface ICollection
 </summary>
</member>
<member name="P:FLEXYGO.Objects.ICollection.Count">
 <summary>
 Element Count.
 </summary>
 <value>The count.</value>
</member>
<member name="P:FLEXYGO.Objects.ICollection.Item(System.Int32)">
 <summary>
 Gets or sets the item.
 </summary>
 <value>The item.</value>
</member>
<member name="T:FLEXYGO.Objects.EntityCollection">
 <summary>
 Class EntityCollection is the collection of EntityObjects.
 It works as a container that groups objects of the same type.
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._ObjectConfiguration">
 <summary>
 The EntityCollection Configuration settings
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._confToken">
 <summary>
 The EntityCollection Configuration token
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._dm">
 <summary>
 The secure data manager
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._table">
 <summary>
 The current loaded table
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._parentObject">
 <summary>
 The parent object
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._parentDefaults">
 <summary>
 The parent object defaults
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._name">
 <summary>
 The EntityCollection name
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._ControlConfig">
 <summary>
 The  control configuration string
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._sql">
 <summary>
 The EntityCollection SQL
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._OriginalWhere">
 <summary>
 The EntityCollection original where
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._id">
 <summary>
 The EntityCollection id
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._Processes">
 <summary>
 The EntityCollection processes collection
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._menusLoaded">
 <summary>
 If the menus are loaded
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._reports">
 <summary>
 The reports collection
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._ReportsLoaded">
 <summary>
 If The reports collection is loaded
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._pageSize">
 <summary>
 The page size
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._isCountLoaded">
 <summary>
 I EntityCollection count has been loaded
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._ItemCount">
 <summary>
 The number of Items collection
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection._currentLoadedPage">
 <summary>
 The current loaded page
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection.Context">
 <summary>
 The context
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityCollection.pProperties">
 <summary>
 The loaded properties collection
 </summary>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.#ctor">
 <summary>
 Initializes a new instance of the <see cref="T:FLEXYGO.Objects.EntityCollection"/> class.
 </summary>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.#ctor(System.String,FLEXYGO.Configuration.Tokens.ConfToken)">
 <summary>
 Initializes a new instance of the <see cref="T:FLEXYGO.Objects.EntityCollection"/> class.
 </summary>
 <param name="Name">EntityCollection Name.</param>
 <param name="aConfToken">a ConfToken.</param>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.#ctor(System.String,System.String,FLEXYGO.Configuration.Tokens.ConfToken)">
 <summary>
 Initializes a new instance of the <see cref="T:FLEXYGO.Objects.EntityCollection"/> class.
 </summary>
 <param name="Name">EntityCollection Name.</param>
 <param name="aWhere">a Where sentence.</param>
 <param name="aConfToken">a ConfToken.</param>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection._new(System.String,System.String,FLEXYGO.Configuration.Tokens.ConfToken)">
 <summary>
 _news the specified object type.
 </summary>
 <param name="Name">EntityCollection Name.</param>
 <param name="aWhere">a Where sentence.</param>
 <param name="aConfToken">a ConfToken.</param>
 <exception cref="T:System.Exception">Error creando el objeto  + Name + :  + e.Message</exception>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.ConfToken">
 <summary>
 Gets or sets the conf token.
 </summary>
 <value>The conf token.</value>
 <exception cref="T:System.Exception">
 ERROR EntityCollection.ConfToken -  + e.Message
 </exception>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.Name">
 <summary>
 Gets the EntityCollection name.
 </summary>
 <value>The name.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.Configuration">
 <summary>
 Gets the EntityCollection configuration.
 </summary>
 <value>The configuration.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.ChildConfiguration">
 <summary>
 Gets the default child configuration.
 </summary>
 <value>The child configuration.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.Description">
 <summary>
 Gets the description.
 </summary>
 <value>The description.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.ConnString">
 <summary>
 Gets the connection String for Current user.
 </summary>
 <value>System.string</value>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.ParseString(System.String,System.Boolean)">
 <summary>
 Parses the string {{property}} against default values and object properties.
 " The {{ObjectName}} is ok " would result in "The Client is ok"
 </summary>
 <param name="str">The string.</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.ParseValue(System.String)">
 <summary>
 Parses the string {{property}} against default values and object properties.
 " The {{ObjectName}} is ok " would result in "The Client is ok"
 </summary>
 <param name="str">The string.</param>
 <returns>System.String formatted with invariant culture.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.ParseWithDefaults(System.String,FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Parses the string {{property}} against default values and object properties.
 " The {{ObjectName}} is ok " would result in "The Client is ok"
 </summary>
 <param name="sqlSentence">The string.</param>
 <returns>System.String formatted with invariant culture.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.Properties">
 <summary>
 Gets the Property secured collection.
 This property collection changes the view property based on user security
 It also changes the SQL sentence if it is a combo , based on user security and object secured by object property
 </summary>
 <returns>The object Property collection.</returns>
 <exception cref="T:System.Exception">Error Obtaining Properties.</exception>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.GetObjectToken">
 <summary>
 Gets the get object token.
 </summary>
 <value>The get object token.</value>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.ProcessCollection(FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Gets the EntityCollection process collection.
 </summary>
 <returns>The ObjectProcessCollection.</returns>
 <exception cref="T:System.Exception">Error Obtaining processes.</exception>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.NavigationNodes(FLEXYGO.User.Interface.UserNavigateNodes.eNodeType,FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Gets Navigation Nodes Based on Reports, Process, Related Objects and actions.
 </summary>
 <param name="NodeType">A Node Type (Action, Process, Report, Object)</param>
 <returns>NavigationNodes.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.Reports(FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Gets the EntityCollection Reports collection.
 </summary>
 <returns>The ObjectReportsCollection.</returns>
 <exception cref="T:System.Exception">Error Obtaining Object Reports Collection.</exception>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.ActionsCollection">
 <summary>
 Gets the Object actions collection wich is allways nothing.
 Used for Compatibility implementing IEntity
 </summary>
 <returns>The actions collection.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.CanInsert">
 <summary>
 Gets a value indicating whether collection default child can be inserted.
 </summary>
 <value><c>true</c> if this instance can be inserted; otherwise, <c>false</c>.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.CanUpdate">
 <summary>
 Gets a value indicating whether this collection default child can be Edited.
 </summary>
 <value><c>true</c> if this instance can be viewed; otherwise, <c>false</c>.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.CanDelete">
 <summary>
 Gets a value indicating whether this collection default child can be Deleted.
 </summary>
 <value><c>true</c> if this instance can be viewed; otherwise, <c>false</c>.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.IsCollection">
 <summary>
 Gets a value indicating whether this instance is collection.
 </summary>
 <value><c>true</c> if this instance is collection; otherwise, <c>false</c>.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.ID">
 <summary>
 Gets the identifier.
 </summary>
 <value>The identifier.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.ParentObject">
 <summary>
 Gets or sets the parent object.
 </summary>
 <value>The parent object.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.ParentDefaults">
 <summary>
 Gets or sets the parent object defaults.
 </summary>
 <value>The parent object defaults.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.OriginalSQLSentence">
 <summary>
 Gets the original SQL sentence.
 </summary>
 <value>The original SQL sentence.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.TableName">
 <summary>
 Gets the table Name.
 </summary>
 <value>The table Name.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.SQL">
 <summary>
 Gets or sets the SQL sentence.
 </summary>
 <value>The SQL.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.PageSize">
 <summary>
 Gets or sets the page size.
 </summary>
 <value>The page size value.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.CurrentPage">
 <summary>
 Gets the current active page number.
 </summary>
 <value>The current page.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.PageCount">
 <summary>
 Gets the page count.
 </summary>
 <value>The page count.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.Count">
 <summary>
 Gets the EntityCollection row count.
 </summary>
 <value>The count.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.Item(System.Int32)">
 <summary>
 As it is an entityCollection it returns EntityObjects
 </summary>
 <value>EntityObject</value>
 <exception cref="T:System.Exception">Set Item no implemented for collections.</exception>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.PrimaryKeys">
 <summary>
 Gets the primary keys string.
 </summary>
 <value>The primary keys string.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.UserConnectionString">
 <summary>
 Gets the UserConnectionString.
 </summary>
 <value>UserConnection</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.OriginalWhere">
 <summary>
 Gets or sets the original where.
 </summary>
 <value>The original where.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.ControlConfig">
 <summary>
 Gets or sets the control configuration.
 </summary>
 <value>The control configuration.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.DataManager">
 <summary>
 Gets or sets the data manager.
 </summary>
 <value>The data manager.</value>
 <exception cref="T:System.Exception">"Could not change property value due to open transaction."</exception>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.ToJSon(System.Int32,System.Int32,System.String)">
 <summary>
Returns JSon string from entityObject current page Table.
 </summary>
 <param name="Page">Page Number</param>
 <param name="Pagesize">Page Size</param>
 <param name="OrderBy">Alternative Order by</param>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.ToJSon">
 <summary>
Returns JSon string from entityObject current page Table.
 </summary>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="P:FLEXYGO.Objects.EntityCollection.Where">
 <summary>
Returns Where String.
 </summary>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetWhere(FLEXYGO.Utilities.SQL.eWhereType)">
 <summary>
Returns Where String.
 </summary>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetWhereKeys">
 <summary>
Returns Where Keys String.
 </summary>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetToolBar(FLEXYGO.Environment.ModuleToolbar,FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Process Toolbar with Object Values
 </summary>
 <param name="Toolbar">The toolbar to process.</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetCrystalReportDocument(System.String,System.String,FLEXYGO.Reporting.eReportModes,System.Collections.Generic.List{FLEXYGO.Utilities.General.KeyValuePairs})">
 <summary>
 Gets a crystal report document linked to the object.
 </summary>
 <param name="ReportName">Name of the report.</param>
 <param name="ReportSelectionFormula">The report selection formula.</param>
 <param name="ReportMode">A report mode.</param>
 <param name="ReportParams">The report parameters.</param>
 <returns>CrystalDecisions.CrystalReports.Engine.ReportDocument.</returns>
 <exception cref="T:FLEXYGO.Exceptions.LocalizedException">
 Report Id {0} could not be loaded
 or
 Report formula {0}
 </exception>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.SQLDataSentence(System.String)">
 <summary>
 Gets the SQL Data Sentence .
 </summary>
 <returns>The SQL Data Sentence.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetPageData(System.Int32,System.Int32,System.Boolean,System.String,System.Boolean,System.Boolean)">
 <summary>
 Gets indicated page DataTable based on page and page size.
 </summary>
 <returns> aDataTable.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetPageData(System.Int32,System.Int32,System.String,System.Boolean,System.Collections.Generic.List{FLEXYGO.Objects.Settings.PropertyOrder},System.Boolean)">
 <summary>
 Gets the data based on page, page size and where sentence.
 </summary>
 <returns>a DataTable.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetPageData(System.Int32,System.Int32,System.String,System.Boolean,System.String,System.Boolean,System.Boolean)">
 <summary>
 Gets the data based on page, page size and where sentence.
 </summary>
 <returns>a DataTable.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetPageSQL(System.String,System.Boolean,System.Collections.Generic.List{FLEXYGO.Objects.Settings.PropertyOrder},System.Boolean)">
 <summary>
 Gets the SQL based on where sentence and order by
 </summary>
 <returns>a DataTable.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetPageSQL(System.String,System.Boolean,System.String,System.Boolean,System.Boolean)">
 <summary>
 Gets the SQL based on where sentence and order by
 </summary>
 <returns>a DataTable.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetEnumerator">
 <summary>
 Returns an enumerator that iterates through a collection.
 </summary>
 <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.Refresh">
 <summary>
 Refreshes the current loaded table.
 </summary>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.KeyFields">
 <summary>
 Key fields ArrayList.
 </summary>
 <returns>ArrayList.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetDataView(System.String,System.Int32,System.Int32,System.String,System.Collections.Generic.List{FLEXYGO.Objects.Settings.PropertyOrder})">
 <summary>
 Gets DataTable based on a Data view name a where sentence, order by and paging .
 </summary>
 <param name="ViewName">DataView Name.</param>
 <param name="Page">optional page number (default first page 0)</param>
 <param name="Pagesize">optional pagesize (default 5000).</param>
 <param name="aWhere">optional additional where sentence.</param>
 <param name="OrderBy">optional order by sentence.</param>
 <returns>DataTable.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetDataViewSchema(System.String)">
 <summary>
 Gets Data View Schema based on a Data view name
 </summary>
 <param name="ViewName">DataView Name.</param>
 <returns>DataTable.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetDataView(System.String,System.Int32,System.Int32,System.String,System.String)">
 <summary>
 Gets DataTable based on a Data view name a where sentence, order by and paging .
 </summary>
 <param name="ViewName">DataView Name.</param>
 <param name="Page">optional page number (default first page 0)</param>
 <param name="Pagesize">optional pagesize (default 5000).</param>
 <param name="aWhere">optional additional where sentence.</param>
 <param name="OrderBy">optional order by sentence.</param>
 <returns>DataTable.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.buildSQLViewSentence(System.String,System.String,System.Collections.Generic.List{FLEXYGO.Objects.Settings.PropertyOrder})">
 <summary>
 Builds SQL based on a view name, a where sentence, Paging and orderBy.
 </summary>
 <param name="ViewName">DataView Name.</param>
 <param name="aWhere">Optional where sentence.</param>
 <param name="OrderBy">Optional order by sentence.</param>
 <returns>DataTable.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetDataViewCount(System.String,System.String)">
 <summary>
 Gets the number of affected rows from a DataVIew.
 </summary>
 <param name="ViewName">Name of the view.</param>
 <param name="aWhere">a Where sentence.</param>
 <returns>System.Int32.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetTemplateType(System.String)">
 <summary>
 Gets the template based on Template Type.
 </summary>
 <param name="TemplateType">Type of the template.</param>
 <returns>Template.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetTemplateType(System.String,System.Int32,System.Int32,System.String,System.Collections.Generic.List{FLEXYGO.Objects.Settings.PropertyOrder},System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,FLEXYGO.Objects.Settings.TemplateGroup})">
 <summary>
 Gets a template based on the TemplateType.
 If object does not have a template for that mode it will get a system default template definition
 </summary>
 <param name="TemplateType">Type of the template.</param>
 <param name="page">Page order</param>
 <param name="pageSize">Page size</param>
 <param name="additionalWhere">Optional additional filter</param>
 <param name="OrderBy">The order by sentence.</param>
 <param name="ViewName">An specific Object ViewName</param>
 <param name="NoData">When template is based on a SQL sentence set tis value to true</param>
 <returns>Template.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetDefaultEditListTemplate(System.Int32,System.Int32,System.String,System.Collections.Generic.List{FLEXYGO.Objects.Settings.PropertyOrder},System.String)">
 <summary>
 Gets a template based on the TemplateType.
 If object does not have a template for that mode it will get a system default template definition
 </summary>
 <param name="page">Page order</param>
 <param name="pageSize">Page size</param>
 <param name="additionalWhere">Optional additional filter</param>
 <param name="orderby">The order by sentence.</param>
 <returns>Template.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetTemplate(System.String,System.Boolean,System.Int32,System.Int32,System.String,System.Collections.Generic.List{FLEXYGO.Objects.Settings.PropertyOrder}@,System.Collections.Generic.Dictionary{System.String,FLEXYGO.Objects.Settings.TemplateGroup})">
 <summary>
 Gets a template based on the Template Id.
 </summary>
 <param name="TemplateId">Template id.</param>
 <param name="noData">if True then just loads template with no data</param>
 <param name="page">Page order</param>
 <param name="pageSize">Page size</param>
 <param name="additionalWhere">Optional additional filter</param>
 <param name="orderby">The order by sentence.</param>
 <returns>Template.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetTemplateList(System.String)">
 <summary>
 Gets a list of templates for a given type  
 </summary>
 <param name="TemplateType">The template Type.</param>
 <returns>Template collection.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetBasicTemplateList(System.String)">
 <summary>
 Gets a simplified list of templates for a given template type  
 </summary>
 <param name="TemplateType">The template Type.</param>
 <returns>Template Base collection with id and description.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetBasicViewList">
 <summary>
 Gets a simplified list of views for a given object  
 </summary>
 <returns>Template Base collection with id and description.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.GetTemplate(System.String)">
 <summary>
 Gets the specified template based on the template id
 </summary>
 <param name="TemplateId">The template identifier.</param>
 <returns>Template.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection.Delete(System.Boolean)">
 <summary>
 Runs delete Process on all objects in collection
 </summary>
 <param name="ReloadConfig">Set if system object configuration must be reloaded (Only for system objects)</param>
 <returns><c>true</c> if deleted, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection._GetWhere(FLEXYGO.Utilities.SQL.eWhereType)">
 <summary>
 Gets the EntityCollection where string.
 </summary>
 <returns>The EntityCollection where string.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection._collectionPermissions(System.String)">
 <summary>
 EntityCollection Permissions.
 </summary>
 <param name="aSql">a SQL sentence.</param>
 <returns>System.String.</returns>
 <exception cref="T:System.Exception">_colPermision:  + e.Message</exception>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection._sqlCompose(System.String,System.String)">
 <summary>
 Composes an SQL sentence.
 </summary>
 <param name="aSql">a SQL sentence.</param>
 <param name="aFilterSettings">a filer settings.</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection._buildSQL(System.String,System.Boolean,System.Boolean,System.Boolean)">
 <summary>
 Builds the SQL Sentence.
 </summary>
 <param name="aWhere">a Where sentence.</param>
 <param name="withDescripts">Add left join with combo SQL for get Descrip data.</param>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection._buildSQLCollection(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
 <summary>
 Builds the SQL collection.
 </summary>
 <param name="justCount">specify if we want a [selec]t with a [count(*)] instead of the fields</param>
 <param name="withDescripts">Add left join with combo SQL for get Descrip data.</param>
 <returns>System.String.</returns>
 <exception cref="T:System.Exception">_buildSQLCollection:  + ex.Message</exception>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection._objectWhere(System.String,System.Data.DataRow)">
 <summary>
 EntityCollection the where sentence.
 </summary>
 <param name="ObjectName">Name of the object.</param>
 <param name="aRow">a data row.</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection._addWhereFieldsToTable(System.String,FLEXYGO.Utilities.SQL.eWhereType)">
 <summary>
 _adds the where fields to table.
 </summary>
 <param name="aWhere">a where sentence.</param>
 <param name="Mode">a wherModeType.</param>
 <returns>System.String.</returns>
 <exception cref="T:System.Exception">_poner_tablas_campos_where:  + ex.Message</exception>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection._addTableToField(System.String)">
 <summary>
 Adds table to field.
 </summary>
 <param name="FieldName">the Field Name.</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityCollection._where">
 <summary>
 The where.
 </summary>
 <returns>System.String.</returns>
</member>
<member name="T:FLEXYGO.Objects.Enumerator">
 <summary>
 Class Enumerator.
 </summary>
</member>
<member name="F:FLEXYGO.Objects.Enumerator._index">
 <summary>
 The index
 </summary>
</member>
<member name="F:FLEXYGO.Objects.Enumerator._col">
 <summary>
 The collection
 </summary>
</member>
<member name="M:FLEXYGO.Objects.Enumerator.#ctor(FLEXYGO.Objects.ICollection)">
 <summary>
 Initializes a new instance of the <see cref="T:FLEXYGO.Objects.Enumerator"/> class.
 </summary>
 <param name="aCol">a col.</param>
</member>
<member name="M:FLEXYGO.Objects.Enumerator.Reset">
 <summary>
 Sets the enumerator to its initial position, which is before the first element in the collection.
 </summary>
</member>
<member name="M:FLEXYGO.Objects.Enumerator.MoveNext">
 <summary>
 Advances the enumerator to the next element of the collection.
 </summary>
 <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
</member>
<member name="P:FLEXYGO.Objects.Enumerator.Current">
 <summary>
 Gets the current element in the collection.
 </summary>
 <value>The current.</value>
</member>
<member name="T:FLEXYGO.Objects.ColumnUtils">
 <summary>
 Class ColumnUtils.
 </summary>
</member>
<member name="M:FLEXYGO.Objects.ColumnUtils.TranslateColumnNames(System.String,System.Data.DataTable,FLEXYGO.Configuration.Tokens.ConfToken)">
 <summary>
 Translates the Column names based on data table.
 Returns a BaseCollection
 </summary>
 <param name="ObjectName">Name of the object.</param>
 <param name="Data">The Data table.</param>
 <param name="Conf">The conf.</param>
 <returns>BaseCollection</returns>
</member>
<member name="T:FLEXYGO.Objects.IEntity">
 <summary>
 Interface IEntity, Used for working with EntityCollection And ObjectEntity
 </summary>
</member>
<member name="P:FLEXYGO.Objects.IEntity.Name">
 <summary>
 Gets the Entity name.
 </summary>
 <value>The name.</value>
</member>
<member name="P:FLEXYGO.Objects.IEntity.Description">
 <summary>
 Gets the Entity Description.
 </summary>
 <value>The Description.</value>
</member>
<member name="P:FLEXYGO.Objects.IEntity.ConfToken">
 <summary>
 Gets or sets the Entity configuration token.
 </summary>
 <value>The ConfToken.</value>
</member>
<member name="P:FLEXYGO.Objects.IEntity.GetObjectToken">
 <summary>
 Gets the Entity object token string.
 </summary>
 <value>The object token string.</value>
</member>
<member name="P:FLEXYGO.Objects.IEntity.Configuration">
 <summary>
 Gets the Entity configuration.
 </summary>
 <value>The ObjectSettings.</value>
</member>
<member name="P:FLEXYGO.Objects.IEntity.IsCollection">
 <summary>
 Gets a value indicating whether this Entity is collection.
 </summary>
 <value><c>true</c> if this instance is collection; otherwise, <c>false</c>.</value>
</member>
<member name="P:FLEXYGO.Objects.IEntity.Where">
 <summary>
 Gets Entity the where string.
 </summary>
 <value>The where string.</value>
</member>
<member name="P:FLEXYGO.Objects.IEntity.Datamanager">
 <summary>
 Gets the datamanager related to the object connection string.
 </summary>
 <value>The DataManager.</value>
</member>
<member name="M:FLEXYGO.Objects.IEntity.GetWhereKeys">
 <summary>
 Gets where keys.
 </summary>
 <return>The key wheres string.</return>
</member>
<member name="P:FLEXYGO.Objects.IEntity.Item(System.Int32)">
 <summary>
 Gets or sets the  Entity item.
 </summary>
 <value>The item.</value>
</member>
<member name="M:FLEXYGO.Objects.IEntity.Reports(FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Gets the reports collection.
 </summary>
 <returns>ObjectReportCollection.</returns>
</member>
<member name="M:FLEXYGO.Objects.IEntity.Actions">
 <summary>
 Gets the Actions collection.
 </summary>
 <returns>A collection of ToolBar buttons .</returns>
</member>
<member name="M:FLEXYGO.Objects.IEntity.ProcessCollection(FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Gets the Process collection.
 </summary>
 <returns>ObjectProcessCollection.</returns>
</member>
<member name="P:FLEXYGO.Objects.IEntity.ParentDefaults">
 <summary>
 Gets or sets the parent object defaults.
 </summary>
 <value>The parent object defaults.</value>
</member>
<member name="M:FLEXYGO.Objects.IEntity.NavigationNode(FLEXYGO.User.Interface.UserNavigateNodes.eNodeType,FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Gets Navigation Nodes Based on Reports, Process, Related Objects and actions.
 </summary>
 <param name="NodeType">A Node Type (actionNode, Process,Report,Object... See nodes_types table for more info)</param>
 <returns>NavigationNodes.</returns>
</member>
<member name="M:FLEXYGO.Objects.IEntity.GetTemplate(System.String)">
 <summary>
 Gets the template based on template identifier.
 </summary>
 <param name="TemplateId">The template identifier.</param>
 <returns>Template.</returns>
</member>
<member name="M:FLEXYGO.Objects.IEntity.GetTemplateByType(System.String)">
 <summary>
 Gets the template based on Template Type.
 </summary>
 <param name="TemplateType">Type of the template.</param>
 <returns>Template.</returns>
</member>
<member name="M:FLEXYGO.Objects.IEntity.ParseString(System.String,System.Boolean)">
 <summary>
 Parses the string {{property}} against default values and object properties.
 " The {{ObjectName}} is ok " would result in "The Client is ok"
 </summary>
 <param name="str">The string.</param>
 <param name="SQLParse">If true, values are parsed using sql format</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.IEntity.ParseValue(System.String)">
 <summary>
 Parses the string {{property}} against default values and object properties.
 " The {{ObjectName}} is ok " would result in "The Client is ok"
 </summary>
 <param name="str">The string.</param>
 <returns>System.String formatted with invariant culture.</returns>
</member>
<member name="M:FLEXYGO.Objects.IEntity.ParseWithDefaults(System.String,FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Parses the string {{property}} against default values of page.
 </summary>
 <param name="str">The string.</param>
 <returns>System.String formatted with invariant culture.</returns>
</member>
<member name="M:FLEXYGO.Objects.IEntity.GetToolBar(FLEXYGO.Environment.ModuleToolbar,FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Process Toolbar with Object Values
 </summary>
 <param name="Toolbar">The toolbar to process.</param>
 <returns>System.String.</returns>
</member>
<member name="T:FLEXYGO.Objects.DelegatedProperty">
 <summary>
 Delegate DelegatedProperty
 </summary>
 <returns>System.Object.</returns>
</member>
<member name="T:FLEXYGO.Objects.EntityObject">
 <summary>
 Class EntityObject is the main Class in the project.
 It enables us to access all entity object properties, security, processes and data
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._IsNew">
 <summary>
 If is new
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._name">
 <summary>
 The name
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._where">
 <summary>
 The where sentence
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._dm">
 <summary>
 The DataManager
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._dataset">
 <summary>
 The dataset
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._relatedObjects">
 <summary>
 The related objects collection
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._Processes">
 <summary>
 The Object processes collection
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._ProcessLoaded">
 <summary>
 if process are already loaded
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._reports">
 <summary>
 The reports collection
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._reportsLoaded">
 <summary>
 if reports are already loaded
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._lastException">
 <summary>
 The last exception
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._lastReturnValues">
 <summary>
 The last returnValues
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._parent">
 <summary>
 The parent object
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._parentDefaults">
 <summary>
 The parent object defaults
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._lastValues">
 <summary>
 The last values collection
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._id">
 <summary>
 The object id
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._keyFields">
 <summary>
 The key Field collection
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._useTransactions">
 <summary>
 if I use Transactions
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._confToken">
 <summary>
 The confToken
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._ObjectConfiguration">
 <summary>
 The object Settings
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject._newDataManager">
 <summary>
 If it has a new data manager
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject.Context">
 <summary>
 The context
 </summary>
</member>
<member name="F:FLEXYGO.Objects.EntityObject.pProperties">
 <summary>
 The loaded properties collection
 </summary>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetObject(System.String,FLEXYGO.Configuration.Tokens.ConfToken)">
 <summary>
 Gets the object.
 </summary>
 <param name="ObjectName">Object  Name</param>
 <param name="aConfToken">a ConfToken.</param>
 <returns>EntityObject.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetObject(System.String,FLEXYGO.Configuration.Tokens.ConfToken,FLEXYGO.Data.DataManager)">
 <summary>
 Gets the object.
 </summary>
 <param name="ObjectName">Object Name.</param>
 <param name="aConfToken">a ConfToken.</param>
 <param name="aDm">a Secure DataManager</param>
 <returns>EntityObject.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.#ctor(System.String,FLEXYGO.Configuration.Tokens.ConfToken)">
 <summary>
 Initializes a new instance of the <see cref="T:FLEXYGO.Objects.EntityObject"/> class.
 </summary>
 <param name="ObjectName">Object Name</param>
 <param name="aConfToken">a confToken.</param>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.#ctor(System.String,FLEXYGO.Configuration.Tokens.ConfToken,FLEXYGO.Data.DataManager)">
 <summary>
 Initializes a new instance of the <see cref="T:FLEXYGO.Objects.EntityObject"/> class.
 </summary>
 <param name="ObjectName">Object Name.</param>
 <param name="aConfToken">a confToken.</param>
 <param name="aDm">a dm.</param>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.#ctor(System.String,System.String,FLEXYGO.Configuration.Tokens.ConfToken)">
 <summary>
 Initializes a new instance of the <see cref="T:FLEXYGO.Objects.EntityObject"/> class.
 </summary>
 <param name="ObjectName">Object Name</param>
 <param name="aWhere">a where sentence.</param>
 <param name="aConfToken">a confToken.</param>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.#ctor(System.String,System.String,FLEXYGO.Configuration.Tokens.ConfToken,FLEXYGO.Data.DataManager)">
 <summary>
 Initializes a new instance of the <see cref="T:FLEXYGO.Objects.EntityObject"/> class.
 </summary>
 <param name="ObjectName">Object Name</param>
 <param name="aWhere">a where sentence.</param>
 <param name="aConfToken">a confToken.</param>
 <param name="aDm">a dm.</param>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._New(System.String,System.String,FLEXYGO.Configuration.Tokens.ConfToken)">
 <summary>
 _s the new.
 </summary>
 <param name="ObjectName">Object Name</param>
 <param name="aWhere">a where sentence.</param>
 <param name="aConfToken">a confToken.</param>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._New(System.String,System.String,FLEXYGO.Configuration.Tokens.ConfToken,FLEXYGO.Data.DataManager)">
 <summary>
 creates a  new object .
 </summary>
 <param name="ObjectName">Object Name.</param>
 <param name="aWhere">a where sentence.</param>
 <param name="aConfToken">a confToken.</param>
 <param name="aDm">a DataManager.</param>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.GetData">
 <summary>
 Gets the object data.
 </summary>
 <value>The object Dataset.</value>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.GetObjectToken">
 <summary>
 Gets the object token.
 </summary>
 <value>The object token.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.CanUpdate">
 <summary>
 Gets a value indicating whether this instance can be updated.
 </summary>
 <value><c>true</c> if this instance can updated; otherwise, <c>false</c>.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.CanDelete">
 <summary>
 Gets a value indicating if this instance can be deleted.
 </summary>
 <value><c>true</c> if this instance can be deleted; otherwise, <c>false</c>.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.CanInsert">
 <summary>
 Gets a value indicating if this instance can be inserted.
 </summary>
 <value><c>true</c> if this instance can be inserted; otherwise, <c>false</c>.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.CanView">
 <summary>
 Gets a value indicating if this instance can be viewed.
 </summary>
 <value><c>true</c> if this instance can be viewed; otherwise, <c>false</c>.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.CanViewCollection">
 <summary>
 Gets a value indicating whether this instances collection can be viewed.
 </summary>
 <value><c>true</c> if this instance can be viewed; otherwise, <c>false</c>.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.CanPrint">
 <summary>
 Gets a value indicating whether this instance can be printed.
 </summary>
 <value><c>true</c> if this instance can be printed; otherwise, <c>false</c>.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.CanClone">
 <summary>
 Gets a value indicating if this instance can be cloned.
 </summary>
 <value><c>true</c> if this instance can be cloned; otherwise, <c>false</c>.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.Configuration">
 <summary>
 Gets the object configuration.
 </summary>
 <value>The object Settings.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.Name">
 <summary>
 Gets the object name.
 </summary>
 <value>The objec tname.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.LastException">
 <summary>
 Gets the entity last Exception.
 </summary>
 <value>The last error.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.LastReturnValues">
 <summary>
 Gets the entity last Return Values as a ProcessHelper.
 </summary>
 <value>The last error.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.ConfToken">
 <summary>
 Gets or sets the conf token.
 </summary>
 <value>The conf token.</value>
 <exception cref="T:System.Exception">
 </exception>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.Description">
 <summary>
 Gets the object description.
 </summary>
 <value>The description.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.IsCollection">
 <summary>
 Gets a value indicating whether this instance is collection.
 </summary>
 <value><c>true</c> if this instance is a collection; otherwise, <c>false</c>.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.ConnString">
 <summary>
 Gets the connection String for Current user.
 </summary>
 <value>System.string</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.DBType">
 <summary>
 Gets the connection String DBType for Current user.
 </summary>
 <value>System.string</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.ID">
 <summary>
 Gets the object identifier.
 </summary>
 <value>The identifier.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.ParentObject">
 <summary>
 Gets or sets the parent object.
 </summary>
 <value>The parent object.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.ParentDefaults">
 <summary>
 Gets or sets the parent object defaults.
 </summary>
 <value>The parent object defaults.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.Sql">
 <summary>
 Gets the object SQL string.
 </summary>
 <value>The SQL string.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.ParentName">
 <summary>
 Gets the parents Name.
 </summary>
 <value>The name of the parent.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.TableName">
 <summary>
 Gets the Table Name.
 </summary>
 <value>The Table Name.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.Where">
 <summary>
 Gets the where sentence.
 </summary>
 <value>The where sentence.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.KeyCollection">
 <summary>
 Gets the key fields Collection.
 </summary>
 <value>The key fields Collection.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.KeyFields">
 <summary>
 Gets the key fields.
 </summary>
 <value>The key fields.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.KeyWhereString">
 <summary>
 Gets the key where string.
 </summary>
 <value>The key where string.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.UserConnectionString">
 <summary>
 Gets the UserConnectionString.
 </summary>
 <value>UserConnection</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.IsNew">
 <summary>
 Gets or sets a value indicating whether this instance is new.
 </summary>
 <value><c>true</c> if this instance is new; otherwise, <c>false</c>.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.Count">
 <summary>
 Gets the number of fields.
 </summary>
 <value>The count.</value>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.HasChanges">
 <summary>
 Gets or sets a value indicating whether this instance has changes.
 </summary>
 <value><c>true</c> if this instance has changes; otherwise, <c>false</c>.</value>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetEnumerator">
 <summary>
 Returns an enumerator that iterates through a collection.
 </summary>
 <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.Item(System.Int32)">
 <summary>
 Gets or sets the Field Value.
 </summary>
 <value>The Field Value.</value>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.Item(System.String)">
 <summary>
 Gets or sets the Field Value.
 </summary>
 <value>The Field Value.</value>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.UseTransactions">
 <summary>
 Gets or sets a value indicating whether to use transactions.
 </summary>
 <value><c>true</c> if to use transactions; otherwise, <c>false</c>.</value>
 <exception cref="T:System.Exception">Could not change value of open transaction.</exception>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.DataManager">
 <summary>
 Gets or sets the data manager.
 </summary>
 <value>The data manager.</value>
 <exception cref="T:System.Exception">"Could not change property value due to open transaction."</exception>
</member>
<member name="P:FLEXYGO.Objects.EntityObject.ToJSon">
 <summary>
Returns JSon string from entityObject DataTable.
 </summary>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.CanEditProperty(System.String)">
 <summary>
 Gets a value indicating whether this instance can be edited.
 </summary>
 <returns><c>true</c> if this instance can edit property; otherwise, <c>false</c>.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.CanViewProperty(System.String)">
 <summary>
 Gets a value indicating whether this instance can be viewed.
 </summary>
 <returns><c>true</c> if this instance can view property; otherwise, <c>false</c>.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.ParseString(System.String,System.Boolean)">
 <summary>
 Parses the string {{property}} against default values and object properties.
 The {{ObjectName}} is ok " would result in "The Client is ok"
 </summary>
 <param name="str">The string.</param>
 <param name="SQLParse">If true, values are parsed using sql format</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.ParseObjectSpecialStrings(System.String,System.String)">
 <summary>
 Parses special object strings like externalObjectView or externalObjectEdit
 </summary>
 <param name="str">The string.</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.ParseValue(System.String)">
 <summary>
 Parses the string {{property}} against default values and object properties.
 The {{ObjectName}} is ok " would result in "The Client is ok"
 </summary>
 <param name="str">The string.</param>
 <returns>System.String formatted with invariant culture.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.ParseWithDefaults(System.String,FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Parse sql sentence with defaults of page.
 </summary>
 <param name="sqlSentence">Sql sentence to parser.</param>
 <param name="Defaults">The defaults.</param>
 <returns>String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.Fields">
 <summary>
 Gets the Fields Collection.
 </summary>
 <returns>The properties CollectionB0.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.Properties">
 <summary>
 Gets the Property secured collection.
 This property collection changes the view property based on user security
 It also changes the SQL sentence if it is a combo , based on user security and object secured by object property
 </summary>
 <returns>The object Property collection.</returns>
 <exception cref="T:System.Exception">Error Obtaining Properties.</exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.DBProperties(System.Boolean,System.Boolean)">
 <summary>
 Gets the property collection only with database defined properties or disconnected from DB
 </summary>
 <param name="includeDisconnected">To include disconnected properties</param>
 <param name="IncludeHasDefinition">To include only properties with property definition in object_Properties Table</param>
 <return>ObjectPropertyCollection.</return>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.Reports(FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Gets the object reports collection.
 </summary>
 <returns>The object reports collection.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.ActionsCollection">
 <summary>
 Gets the Object actions collection.
 </summary>
 <returns>The actions collection.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.ProcessCollection(FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Gets the object process collection.
 </summary>
 <returns>The object process collection.</returns>
 <exception cref="T:System.Exception">Error Obtaining processes.</exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.NavigationNodes(FLEXYGO.User.Interface.UserNavigateNodes.eNodeType,FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Gets Navigation Nodes Based on Reports, Process, Related Objects and actions.
 </summary>
 <param name="NodeType">A Node Type (Action, Process, Report, Object.. see Nodes_Types table for more info)</param>
 <returns>NavigationNodes.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.Read(System.String)">
 <summary>
 Reads data with a  specified  where.
 </summary>
 <param name="aWhere">a where sentence.</param>
 <exception cref="T:System.Exception">Found more then one Object for the same read condition. </exception>
 <exception cref="T:System.Exception">Error Reading object. </exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.Insert(System.Boolean,System.String,System.String)">
 <summary>
 Performs an insert.
 </summary>
 <returns><c>true</c> if inserted, <c>false</c> otherwise.</returns>
 <param name="ReloadConfig">Set if system object configuration must be reloaded (Only for system objects)</param>
 <exception cref="T:System.Exception">Can not insert collections</exception>
 <exception cref="T:System.Exception">Error. No field has been changed.</exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.InsertProcess(System.String,FLEXYGO.Objects.Settings.ObjectSettings.eUpdateType,System.String)">
 <summary>
 Runs insert establishing the insert method we wan to to use. enables to override default insert method
 </summary>
 <param name="aTable">a tabla name.</param>
 <param name="InsertType">an insert type.</param>
 <param name="InsertProcessName">The Insert Process Name.</param>
 <returns><c>true</c> if inserted, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.LogView">
 <summary>
 logs every time an object is viewed.
 </summary>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.Update(System.Boolean,System.String,System.String)">
 <summary>
 Runs the update process.
 </summary>
 <param name="ReloadConfig">Set if system object configuration must be reloaded (Only for system objects)</param>
 <returns><c>true</c> if updated, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetWhereKeys">
 <summary>
 Gets the where keys.
 </summary>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._logObjectActions(FLEXYGO.Data.eDBAction,System.String,System.DateTime)">
 <summary>
logs every time an object is changed 
 </summary>
<param name="ActionType">Action tpe to be logged</param>
<param name="SQLSentence">SQLsentence with changed lines</param>
<param name="StartTime">Time process strated</param>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._getLogMessage(FLEXYGO.Data.eDBAction)">
 <summary>
gets log message based on object Flow text
 </summary>
 <returns>Returns string with SQL sentences</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._getObjectActionChanges">
 <summary>
gets SQL sentence for saving changes into log
 </summary>
 <returns>Returns string with SQL sentences</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.UpdateProcess(FLEXYGO.Objects.Settings.ObjectSettings.eUpdateType,System.String)">
 <summary>
 Runs update establishing the update method we wanto to use. enables to override default update method
 </summary>
 <param name="UpdateType">Update Type.</param>
 <param name="UpdateProcessName">The Update Process Id.</param>
 <returns><c>true</c> if updated, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.UpdateProcessTable(FLEXYGO.Objects.Settings.ObjectSettings.eUpdateType,System.String,System.String)">
 <summary>
 Runs update establishing the update method we wanto to use. enables to override default update method
 </summary>
 <param name="UpdateType">Update Type.</param>
 <param name="UpdateProcessName">The Update Process Id.</param>
 <param name="TableName">The table for update.</param>
 <returns><c>true</c> if updated, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.UpdateWithLastValues">
 <summary>
 Updates with last values.
 </summary>
 <returns><c>true</c> if updated, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.DeleteProcess(System.String,FLEXYGO.Objects.Settings.ObjectSettings.eUpdateType,System.String)">
 <summary>
 Runs delete establishing the delete method we wanto to use. enables to override default delete method
 </summary>
 <param name="aTable">a Table Name.</param>
 <param name="DeleteType">a delete type.</param>
 <param name="DeleteProcessName">The Delete Process Name.</param>
 <returns><c>true</c> if deleted, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.Delete(System.Boolean,System.String,System.String)">
 <summary>
 Runs delete Process
 </summary>
 <param name="ReloadConfig">Set if system object configuration must be reloaded (Only for system objects)</param>
 <returns><c>true</c> if deleted, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.CloneFrom(FLEXYGO.Objects.EntityObject,System.Boolean)">
 <summary>
 Clone from current object.
 </summary>
 <param name="aEntityObject">an entity object</param>
 <param name="IsNew">if set to <c>true</c> the new flag on the object will be set to true.</param>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.CloneFrom(FLEXYGO.Objects.EntityObject)">
 <summary>
 Clone from current object.
 </summary>
 <param name="aEntityObject">an entity object</param>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetDisplayValue(FLEXYGO.Objects.Settings.ObjectProperty)">
 <summary>
 Gets the display value.
 </summary>
 <param name="p">The object property.</param>
 <returns>System.String.</returns>
 <exception cref="T:System.Exception">
 </exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.BasicProperties(System.String,System.Boolean)">
 <summary>
 Gets a collection of properties with basic information for the current object.
 It only returns Properties defined in data base. If there are no properties defined in db
 it will return all table fields.
 
 When there is a view name it will build the properties based on view columns.
 </summary>
 <param name="viewName">Optional ViewName</param>
 <param name="GetAll">Optional Get undefined properties</param>
 <returns>BasicPropertyCollection.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetTemplateType(System.String)">
 <summary>
 Gets a template and its data based on the TemplateType.
 If object does not have a template for that mode it will get a system default template definition
 </summary>
 <param name="TemplateType">Type of the template (see Template_Types Table for more info).</param>
 <returns>Template.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetDefaultTemplate(System.String)">
 <summary>
 Gets a default template when no templates exist.
 </summary>
 <param name="TemplateType">For any of the three modes (view,edit,list)</param>
 <returns>Template.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetTemplate(System.String)">
 <summary>
 Gets the specified template and its data
 </summary>
 <param name="TemplateId">The template identifier.</param>
 <returns>Template.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetTemplateList(System.String)">
 <summary>
 Gets a list of templates for a given type  
 </summary>
 <param name="TemplateType">The template Type.</param>
 <returns>Template collection.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetBasicTemplateList(System.String)">
 <summary>
 Gets a simplified list of templates for a given template type  
 </summary>
 <param name="TemplateType">The template Type.</param>
 <returns>Template Base collection with id and description.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetDataView(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
 <summary>
 Gets DataTable based on a Data view name a where sentence, order by and paging .
 </summary>
 <param name="ViewName">DataView Name.</param>
 <param name="Page">optional page number (default first page 0)</param>
 <param name="Pagesize">optional page size (default 5000).</param>
 <param name="aWhere">optional additional where sentence.</param>
 <param name="OrderBy">optional order by sentence.</param>
 <returns>DataTable.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.buildSQLViewSentence(System.String,System.String,System.String)">
 <summary>
 Builds SQL based on a view name, a where sentence, Paging and orderBy.
 </summary>
 <param name="ViewName">DataView Name.</param>
 <param name="aWhere">Optional where sentence.</param>
 <param name="OrderBy">Optional order by sentence.</param>
 <returns>DataTable.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetDataViewCount(System.String,System.String)">
 <summary>
 Gets the number of affected rows from a DataVIew.
 </summary>
 <param name="ViewName">Name of the view.</param>
 <param name="aWhere">a Where sentence.</param>
 <returns>System.Int32.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetViewColumnsNames(System.String,System.String)">
 <summary>
 Get View Columns Names.
 </summary>
 <param name="ViewName">Name of the view.</param>
 <param name="KeyName">Key name of BaseCollection.</param>
 <returns>DataTable</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.RelatedObjects(System.String)">
 <summary>
 Gets a specific related object.
 </summary>
 <param name="ObjectName">Related Object Name</param>
 <returns>The EntityCollection of a related object.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.RelatedMenuVisibleObjects">
 <summary>
 Gets the related objects with menu visible true.
 </summary>
 <returns>The related objects.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.RelatedObjects">
 <summary>
 Gets all the related objects.
 </summary>
 <returns>The related objects.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetRelatedObjects(System.Boolean)">
 <summary>
 Gets the related objects.
 </summary>
 <param name="onlyMenu">Returns only menu related objects</param>
 <returns>The related objects.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._GetRelatedDefaults(System.String)">
 <summary>
 Parse the defaults object relation strings
 </summary>
 <param name="defaultsString">the defaults object relation strings</param>
 <returns>Base Collection with the parsed values</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.RelatedObjectsReload">
 <summary>
 Reloads the related objects.
 </summary>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetToolBar(FLEXYGO.Environment.ModuleToolbar,FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Process Toolbar with Object Values
 </summary>
 <param name="Toolbar">The toolbar to process.</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetCrystalReportDocument(System.String,System.String,FLEXYGO.Reporting.eReportModes,System.Collections.Generic.List{FLEXYGO.Utilities.General.KeyValuePairs})">
 <summary>
 Gets a crystal report document linked to the object.
 </summary>
 <param name="ReportName">Name of the report.</param>
 <param name="ReportSelectionFormula">The report selection formula.</param>
 <param name="ReportMode">A report mode.</param>
 <param name="ReportParams">The report parameters.</param>
 <returns>CrystalDecisions.CrystalReports.Engine.ReportDocument.</returns>
 <exception cref="T:FLEXYGO.Exceptions.LocalizedException">
 Report Id {0} could not be loaded
 or
 Report formula {0}
 </exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.GetCrystalReportDocumentStream(System.String,System.String,FLEXYGO.Reporting.eReportModes,System.Collections.Generic.List{FLEXYGO.Utilities.General.KeyValuePairs})">
 <summary>
 Gets a crystal report document stream linked to the object.
 </summary>
 <param name="ReportName">Name of the report.</param>
 <param name="ReportSelectionFormula">The report selection formula.</param>
 <param name="ReportMode">A report mode.</param>
 <param name="ReportParams">The report parameters.</param>
 <returns>System.IO.Stream.</returns>
 <exception cref="T:FLEXYGO.Exceptions.LocalizedException"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._setFilters">
 <summary>
 Sets the object filters.
 </summary>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._setLastValues">
 <summary>
 Sets the last values.
 </summary>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._insert(System.String,FLEXYGO.Data.eDBType,FLEXYGO.Objects.Settings.ObjectSettings.eUpdateType,System.String,System.Boolean)">
 <summary>
runs insert process.
 </summary>
 <param name="TableName">Table Name.</param>
 <param name="DBType">DB type</param>
 <param name="InsertType">Insert type</param>
 <param name="InsertProcessName">The insert process Id.</param>
 <param name="aIgnoreSec">if set to <c>true</c> it will ignore security.</param>
 <returns><c>true</c> if inserted, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._update(System.String,FLEXYGO.Data.eDBType,FLEXYGO.Objects.Settings.ObjectSettings.eUpdateType,System.String,System.Boolean,System.Data.DataRowVersion)">
 <summary>
 Runs update process
 </summary>
 <param name="TableName">Table Name.</param>
 <param name="DBType">Database Type.</param>
 <param name="UpdateType">update Type</param>
 <param name="UpdateProcessName">The update Process Name.</param>
 <param name="aIgnoreSec">if set to <c>true</c> it will ignore security.</param>
 <param name="aVersion">a version.</param>
 <returns><c>true</c> if updated, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._delete(System.String,FLEXYGO.Data.eDBType,FLEXYGO.Objects.Settings.ObjectSettings.eUpdateType,System.String,System.Boolean)">
 <summary>
 Runs delete process.
 </summary>
 <param name="TableName">Table Name.</param>
 <param name="DBType">Database type.</param>
 <param name="DeleteType">Delete Type.</param>
 <param name="DeleteProcessName">The delete process Name.</param>
 <param name="aIgnoreSec">if set to <c>true</c> security will be ignored.</param>
 <returns><c>true</c> if delete works correctly, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.configTimeout(System.String)">
 <summary>
 Sets the configured timeout
 </summary>
 <param name="ProcessName">Process Name.</param>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._read(System.String,System.String)">
 <summary>
 Reads the specified table with specified sentence.
 </summary>
 <param name="TableName">Table Name.</param>
 <param name="aWhere">a where sentence.</param>
 <returns>System.Int32.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._readAdditionalFields(System.String)">
 <summary>
 reads the additional fields.
 </summary>
 <param name="aWhere">a where sentence.</param>
 <exception cref="T:System.Exception">
 </exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._newEntry">
 <summary>
 new  entry.
 </summary>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._newEntry(System.String)">
 <summary>
 new  entry.
 </summary>
 <param name="TableName">Table Name.</param>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._newEntry(System.Data.DataTable)">
 <summary>
 new entry.
 </summary>
 <param name="aTable">a table name.</param>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.ParseDefaultValues(System.Object)">
 <summary>
 parses DB default values.
 </summary>
 <param name="aValue">a Value (current_timestamp,current_user,newid).</param>
 <returns>System.Object.</returns>
 <exception cref="T:System.Exception">Error Parse.  + e.Message</exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._runUpdate(System.String,System.Data.DataRowVersion)">
 <summary>
 Runs update process.
 </summary>
 <param name="TableName">Table Name.</param>
 <param name="aVersion">a version.</param>
 <returns><c>true</c> if updated, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._runInsert(System.String)">
 <summary>
 Runs the insert process.
 </summary>
 <param name="TableName">Table Name.</param>
 <returns><c>true</c> if inserted, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._runDelete(System.String)">
 <summary>
 Runs the delete process.
 </summary>
 <param name="TableName">Table Name.</param>
 <returns><c>true</c> if deleted, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._runInsertStoredProcedure(System.String,System.Boolean@,System.String)">
 <summary>
 Runs the insert stored procedure.
 </summary>
 <param name="TableName">Table Name.</param>
 <param name="Exists">returns true if stored procedure exits.</param>
 <param name="StoredName">Stored procedure Name</param>
 <returns><c>true</c> if ok, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._runERPInsertStoredProcedure(System.String,System.Boolean@,System.String)">
 <summary>
 Runs the insert stored procedure for Ahora Freeware ERP.
 </summary>
 <param name="TableName">Table Name.</param>
 <param name="Exists">returns true if stored procedure exits.</param>
 <param name="StoredName">Stored Procedure Name</param>
 <returns><c>true</c> if ok, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._getStoredName(System.String)">
 <summary>
 Gets stored procedure Name.
 </summary>
 <param name="ProcessName">an optional Process Name</param>
 <returns>String with stored procedure Name</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._runUpdateStoredProcedure(System.String,System.Boolean@,System.String)">
 <summary>
 Runs the update stored procedure.
 </summary>
 <param name="TableName">Table Name.</param>
 <param name="Exists">returns true if stored procedure exits.</param>
 <param name="StoredName">Stored Procedure Name</param>
 <returns><c>true</c> if ok, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._runERPUpdateStoredProcedure(System.String,System.Boolean@,System.String)">
 <summary>
 Runs the update stored procedure for an Ahora Freeware ERP database.
 </summary>
 <param name="TableName">Table Name.</param>
 <param name="Exists">returns true if stored procedure exits.</param>
 <param name="StoredName">Stored Procedure Name</param>
 <returns><c>true</c> if ok, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._runDeleteStoredProcedure(System.String,System.Boolean@,System.String)">
 <summary>
 Runs the delete stored procedure.
 </summary>
 <param name="TableName">Table Name.</param>
 <param name="Exists">returns true if stored procedure exits.</param>
 <param name="StoredName">The stored procedure Name</param>
 <returns><c>true</c> if ok, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._runERPDeleteStoredProcedure(System.String,System.Boolean@,System.String)">
 <summary>
 Runs the delete stored procedure for Ahora Freeware ERP.
 </summary>
 <param name="TableName">Table Name.</param>
 <param name="Exists">returns true if stored procedure exits.</param>
 <param name="StoredName">Stored Procedure Name</param>
 <returns><c>true</c> if ok, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._keyFieldsStr">
 <summary>
 Gets the key fields string.
 </summary>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._getKeyFields">
 <summary>
 Gets key fields collection.
 </summary>
 <returns>CollectionB0.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._whereKeyFields(System.Data.DataRowVersion,System.Boolean)">
 <summary>
 Gets the where key fields.
 </summary>
 <param name="aVersion">a version.</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._getRelatedObjectsPropertyValues(System.String,System.String)">
 <summary>
 Gets Related Objects Property Values based on original object property value
 </summary>
 <param name="aProperty">a property.</param>
 <param name="aField">a field.</param>
 <returns>System.String.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._buildRelatedObjectsWhere(System.String,System.String)">
 <summary>
 Builds Where for related objects using where relation string.
 </summary>
 <param name="aWhere">a where sentence.</param>
 <param name="ObjectName">The Object Name.</param>
 <returns>System.String.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._buildInsert(System.String,System.String@,System.Object@)">
 <summary>
 Builds the insert sentence.
 </summary>
 <param name="TableName">Table Name.</param>
 <param name="Username">The username.</param>
 <param name="InsertUpdateDate">a  insert update date.</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._buildUpdate(System.String,System.Data.DataRowVersion)">
 <summary>
 Builds the update sentence.
 </summary>
 <param name="TableName">Table Name.</param>
 <param name="aVersion">a version.</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._mapKeyFields(System.String,System.String)">
 <summary>
 Maps the key fields.
 </summary>
 <param name="TableName">Table Name.</param>
 <param name="aStr">a string.</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._buildDelete(System.String)">
 <summary>
 Builds the delete sentence.
 </summary>
 <param name="TableName">Table Name.</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._refreshTable(System.String)">
 <summary>
 Refreshes the table.
 </summary>
 <param name="TableName">Table Name.</param>
 <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._refreshInsertedTable(System.String)">
 <summary>
 Refreshes the inserted table.
 </summary>
 <param name="TableName">Table Name.</param>
 <returns><c>true</c> if refreshed, <c>false</c> otherwise.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._setKeyFields(System.String)">
 <summary>
 Sets the key fields.
 </summary>
 <param name="AddTableName">Table Name.</param>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject._establishSpecialFields(System.String)">
 <summary>
 Establishes special fields.
 </summary>
 <param name="TableName">Table Name.</param>
 <exception cref="T:System.Exception">
 </exception>
</member>
<member name="M:FLEXYGO.Objects.EntityObject.#ctor">
 <summary>
 Initializes a new instance of the <see cref="T:FLEXYGO.Objects.EntityObject"/> class.
 </summary>
</member>
<member name="M:FLEXYGO.Gipe.RootElement.Serialize">
<summary>
Serializes current RootElement object into an XML document
</summary>
<returns>string XML value</returns>
</member>
<member name="M:FLEXYGO.Gipe.RootElement.Deserialize(System.String,FLEXYGO.Gipe.RootElement@,System.Exception@)">
<summary>
Deserializes workflow markup into an RootElement object
</summary>
<param name="xml">string workflow markup to deserialize</param>
<param name="obj">Output RootElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.RootElement.SaveToFile(System.String,System.Exception@)">
<summary>
Serializes current RootElement object into file
</summary>
<param name="fileName">full path of outupt xml file</param>
<param name="exception">output Exception value if failed</param>
<returns>true if can serialize and save into file; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.RootElement.LoadFromFile(System.String,FLEXYGO.Gipe.RootElement@,System.Exception@)">
<summary>
Deserializes xml markup from file into an RootElement object
</summary>
<param name="fileName">string xml file to load and deserialize</param>
<param name="obj">Output RootElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.RootElement.Clone">
<summary>
Create a clone of this RootElement object
</summary>
</member>
<member name="M:FLEXYGO.Gipe.ExecElement.Serialize">
<summary>
Serializes current ExecElement object into an XML document
</summary>
<returns>string XML value</returns>
</member>
<member name="M:FLEXYGO.Gipe.ExecElement.Deserialize(System.String,FLEXYGO.Gipe.ExecElement@,System.Exception@)">
<summary>
Deserializes workflow markup into an ExecElement object
</summary>
<param name="xml">string workflow markup to deserialize</param>
<param name="obj">Output ExecElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.ExecElement.SaveToFile(System.String,System.Exception@)">
<summary>
Serializes current ExecElement object into file
</summary>
<param name="fileName">full path of outupt xml file</param>
<param name="exception">output Exception value if failed</param>
<returns>true if can serialize and save into file; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.ExecElement.LoadFromFile(System.String,FLEXYGO.Gipe.ExecElement@,System.Exception@)">
<summary>
Deserializes xml markup from file into an ExecElement object
</summary>
<param name="fileName">string xml file to load and deserialize</param>
<param name="obj">Output ExecElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.ExecElement.Clone">
<summary>
Create a clone of this ExecElement object
</summary>
</member>
<member name="M:FLEXYGO.Gipe.StateElement.Serialize">
<summary>
Serializes current StateElement object into an XML document
</summary>
<returns>string XML value</returns>
</member>
<member name="M:FLEXYGO.Gipe.StateElement.Deserialize(System.String,FLEXYGO.Gipe.StateElement@,System.Exception@)">
<summary>
Deserializes workflow markup into an StateElement object
</summary>
<param name="xml">string workflow markup to deserialize</param>
<param name="obj">Output StateElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.StateElement.SaveToFile(System.String,System.Exception@)">
<summary>
Serializes current StateElement object into file
</summary>
<param name="fileName">full path of outupt xml file</param>
<param name="exception">output Exception value if failed</param>
<returns>true if can serialize and save into file; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.StateElement.LoadFromFile(System.String,FLEXYGO.Gipe.StateElement@,System.Exception@)">
<summary>
Deserializes xml markup from file into an StateElement object
</summary>
<param name="fileName">string xml file to load and deserialize</param>
<param name="obj">Output StateElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.StateElement.Clone">
<summary>
Create a clone of this StateElement object
</summary>
</member>
<member name="M:FLEXYGO.Gipe.VarElement.Serialize">
<summary>
Serializes current VarElement object into an XML document
</summary>
<returns>string XML value</returns>
</member>
<member name="M:FLEXYGO.Gipe.VarElement.Deserialize(System.String,FLEXYGO.Gipe.VarElement@,System.Exception@)">
<summary>
Deserializes workflow markup into an VarElement object
</summary>
<param name="xml">string workflow markup to deserialize</param>
<param name="obj">Output VarElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.VarElement.SaveToFile(System.String,System.Exception@)">
<summary>
Serializes current VarElement object into file
</summary>
<param name="fileName">full path of outupt xml file</param>
<param name="exception">output Exception value if failed</param>
<returns>true if can serialize and save into file; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.VarElement.LoadFromFile(System.String,FLEXYGO.Gipe.VarElement@,System.Exception@)">
<summary>
Deserializes xml markup from file into an VarElement object
</summary>
<param name="fileName">string xml file to load and deserialize</param>
<param name="obj">Output VarElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.VarElement.Clone">
<summary>
Create a clone of this VarElement object
</summary>
</member>
<member name="M:FLEXYGO.Gipe.ResultElement.Serialize">
<summary>
Serializes current ResultElement object into an XML document
</summary>
<returns>string XML value</returns>
</member>
<member name="M:FLEXYGO.Gipe.ResultElement.Deserialize(System.String,FLEXYGO.Gipe.ResultElement@,System.Exception@)">
<summary>
Deserializes workflow markup into an ResultElement object
</summary>
<param name="xml">string workflow markup to deserialize</param>
<param name="obj">Output ResultElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.ResultElement.SaveToFile(System.String,System.Exception@)">
<summary>
Serializes current ResultElement object into file
</summary>
<param name="fileName">full path of outupt xml file</param>
<param name="exception">output Exception value if failed</param>
<returns>true if can serialize and save into file; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.ResultElement.LoadFromFile(System.String,FLEXYGO.Gipe.ResultElement@,System.Exception@)">
<summary>
Deserializes xml markup from file into an ResultElement object
</summary>
<param name="fileName">string xml file to load and deserialize</param>
<param name="obj">Output ResultElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.ResultElement.Clone">
<summary>
Create a clone of this ResultElement object
</summary>
</member>
<member name="M:FLEXYGO.Gipe.NameValueElement.Serialize">
<summary>
Serializes current NameValueElement object into an XML document
</summary>
<returns>string XML value</returns>
</member>
<member name="M:FLEXYGO.Gipe.NameValueElement.Deserialize(System.String,FLEXYGO.Gipe.NameValueElement@,System.Exception@)">
<summary>
Deserializes workflow markup into an NameValueElement object
</summary>
<param name="xml">string workflow markup to deserialize</param>
<param name="obj">Output NameValueElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.NameValueElement.SaveToFile(System.String,System.Exception@)">
<summary>
Serializes current NameValueElement object into file
</summary>
<param name="fileName">full path of outupt xml file</param>
<param name="exception">output Exception value if failed</param>
<returns>true if can serialize and save into file; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.NameValueElement.LoadFromFile(System.String,FLEXYGO.Gipe.NameValueElement@,System.Exception@)">
<summary>
Deserializes xml markup from file into an NameValueElement object
</summary>
<param name="fileName">string xml file to load and deserialize</param>
<param name="obj">Output NameValueElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.NameValueElement.Clone">
<summary>
Create a clone of this NameValueElement object
</summary>
</member>
<member name="M:FLEXYGO.Gipe.OutElement.Serialize">
<summary>
Serializes current OutElement object into an XML document
</summary>
<returns>string XML value</returns>
</member>
<member name="M:FLEXYGO.Gipe.OutElement.Deserialize(System.String,FLEXYGO.Gipe.OutElement@,System.Exception@)">
<summary>
Deserializes workflow markup into an OutElement object
</summary>
<param name="xml">string workflow markup to deserialize</param>
<param name="obj">Output OutElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.OutElement.SaveToFile(System.String,System.Exception@)">
<summary>
Serializes current OutElement object into file
</summary>
<param name="fileName">full path of outupt xml file</param>
<param name="exception">output Exception value if failed</param>
<returns>true if can serialize and save into file; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.OutElement.LoadFromFile(System.String,FLEXYGO.Gipe.OutElement@,System.Exception@)">
<summary>
Deserializes xml markup from file into an OutElement object
</summary>
<param name="fileName">string xml file to load and deserialize</param>
<param name="obj">Output OutElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.OutElement.Clone">
<summary>
Create a clone of this OutElement object
</summary>
</member>
<member name="M:FLEXYGO.Gipe.ParamElement.Serialize">
<summary>
Serializes current ParamElement object into an XML document
</summary>
<returns>string XML value</returns>
</member>
<member name="M:FLEXYGO.Gipe.ParamElement.Deserialize(System.String,FLEXYGO.Gipe.ParamElement@,System.Exception@)">
<summary>
Deserializes workflow markup into an ParamElement object
</summary>
<param name="xml">string workflow markup to deserialize</param>
<param name="obj">Output ParamElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.ParamElement.SaveToFile(System.String,System.Exception@)">
<summary>
Serializes current ParamElement object into file
</summary>
<param name="fileName">full path of outupt xml file</param>
<param name="exception">output Exception value if failed</param>
<returns>true if can serialize and save into file; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.ParamElement.LoadFromFile(System.String,FLEXYGO.Gipe.ParamElement@,System.Exception@)">
<summary>
Deserializes xml markup from file into an ParamElement object
</summary>
<param name="fileName">string xml file to load and deserialize</param>
<param name="obj">Output ParamElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.ParamElement.Clone">
<summary>
Create a clone of this ParamElement object
</summary>
</member>
<member name="M:FLEXYGO.Gipe.ParentNodeElement.Serialize">
<summary>
Serializes current ParentNodeElement object into an XML document
</summary>
<returns>string XML value</returns>
</member>
<member name="M:FLEXYGO.Gipe.ParentNodeElement.Deserialize(System.String,FLEXYGO.Gipe.ParentNodeElement@,System.Exception@)">
<summary>
Deserializes workflow markup into an ParentNodeElement object
</summary>
<param name="xml">string workflow markup to deserialize</param>
<param name="obj">Output ParentNodeElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.ParentNodeElement.SaveToFile(System.String,System.Exception@)">
<summary>
Serializes current ParentNodeElement object into file
</summary>
<param name="fileName">full path of outupt xml file</param>
<param name="exception">output Exception value if failed</param>
<returns>true if can serialize and save into file; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.ParentNodeElement.LoadFromFile(System.String,FLEXYGO.Gipe.ParentNodeElement@,System.Exception@)">
<summary>
Deserializes xml markup from file into an ParentNodeElement object
</summary>
<param name="fileName">string xml file to load and deserialize</param>
<param name="obj">Output ParentNodeElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.ParentNodeElement.Clone">
<summary>
Create a clone of this ParentNodeElement object
</summary>
</member>
<member name="M:FLEXYGO.Gipe.InElement.Serialize">
<summary>
Serializes current InElement object into an XML document
</summary>
<returns>string XML value</returns>
</member>
<member name="M:FLEXYGO.Gipe.InElement.Deserialize(System.String,FLEXYGO.Gipe.InElement@,System.Exception@)">
<summary>
Deserializes workflow markup into an InElement object
</summary>
<param name="xml">string workflow markup to deserialize</param>
<param name="obj">Output InElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.InElement.SaveToFile(System.String,System.Exception@)">
<summary>
Serializes current InElement object into file
</summary>
<param name="fileName">full path of outupt xml file</param>
<param name="exception">output Exception value if failed</param>
<returns>true if can serialize and save into file; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.InElement.LoadFromFile(System.String,FLEXYGO.Gipe.InElement@,System.Exception@)">
<summary>
Deserializes xml markup from file into an InElement object
</summary>
<param name="fileName">string xml file to load and deserialize</param>
<param name="obj">Output InElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.InElement.Clone">
<summary>
Create a clone of this InElement object
</summary>
</member>
<member name="M:FLEXYGO.Gipe.NodeContextElement.Serialize">
<summary>
Serializes current NodeContextElement object into an XML document
</summary>
<returns>string XML value</returns>
</member>
<member name="M:FLEXYGO.Gipe.NodeContextElement.Deserialize(System.String,FLEXYGO.Gipe.NodeContextElement@,System.Exception@)">
<summary>
Deserializes workflow markup into an NodeContextElement object
</summary>
<param name="xml">string workflow markup to deserialize</param>
<param name="obj">Output NodeContextElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.NodeContextElement.SaveToFile(System.String,System.Exception@)">
<summary>
Serializes current NodeContextElement object into file
</summary>
<param name="fileName">full path of outupt xml file</param>
<param name="exception">output Exception value if failed</param>
<returns>true if can serialize and save into file; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.NodeContextElement.LoadFromFile(System.String,FLEXYGO.Gipe.NodeContextElement@,System.Exception@)">
<summary>
Deserializes xml markup from file into an NodeContextElement object
</summary>
<param name="fileName">string xml file to load and deserialize</param>
<param name="obj">Output NodeContextElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.NodeContextElement.Clone">
<summary>
Create a clone of this NodeContextElement object
</summary>
</member>
<member name="M:FLEXYGO.Gipe.ContextElement.Serialize">
<summary>
Serializes current ContextElement object into an XML document
</summary>
<returns>string XML value</returns>
</member>
<member name="M:FLEXYGO.Gipe.ContextElement.Deserialize(System.String,FLEXYGO.Gipe.ContextElement@,System.Exception@)">
<summary>
Deserializes workflow markup into an ContextElement object
</summary>
<param name="xml">string workflow markup to deserialize</param>
<param name="obj">Output ContextElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.ContextElement.SaveToFile(System.String,System.Exception@)">
<summary>
Serializes current ContextElement object into file
</summary>
<param name="fileName">full path of outupt xml file</param>
<param name="exception">output Exception value if failed</param>
<returns>true if can serialize and save into file; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.ContextElement.LoadFromFile(System.String,FLEXYGO.Gipe.ContextElement@,System.Exception@)">
<summary>
Deserializes xml markup from file into an ContextElement object
</summary>
<param name="fileName">string xml file to load and deserialize</param>
<param name="obj">Output ContextElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.ContextElement.Clone">
<summary>
Create a clone of this ContextElement object
</summary>
</member>
<member name="M:FLEXYGO.Gipe.VarsElement.Serialize">
<summary>
Serializes current VarsElement object into an XML document
</summary>
<returns>string XML value</returns>
</member>
<member name="M:FLEXYGO.Gipe.VarsElement.Deserialize(System.String,FLEXYGO.Gipe.VarsElement@,System.Exception@)">
<summary>
Deserializes workflow markup into an VarsElement object
</summary>
<param name="xml">string workflow markup to deserialize</param>
<param name="obj">Output VarsElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.VarsElement.SaveToFile(System.String,System.Exception@)">
<summary>
Serializes current VarsElement object into file
</summary>
<param name="fileName">full path of outupt xml file</param>
<param name="exception">output Exception value if failed</param>
<returns>true if can serialize and save into file; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.VarsElement.LoadFromFile(System.String,FLEXYGO.Gipe.VarsElement@,System.Exception@)">
<summary>
Deserializes xml markup from file into an VarsElement object
</summary>
<param name="fileName">string xml file to load and deserialize</param>
<param name="obj">Output VarsElement object</param>
<param name="exception">output Exception value if deserialize failed</param>
<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
</member>
<member name="M:FLEXYGO.Gipe.VarsElement.Clone">
<summary>
Create a clone of this VarsElement object
</summary>
</member>
<member name="T:FLEXYGO.Gipe.GipeExecutor">
 <summary>
 Class GipeExecutor
     Contains static helper methods to control the current exeuction flows
 </summary>
</member>
<member name="T:FLEXYGO.Gipe.GipeParameter">
 <summary>
 Class GipeParameter
 Represents a paremeter in GipeWorkflow
 </summary>
</member>
<member name="M:FLEXYGO.Gipe.GipeParameter.ParseValue(System.String)">
 <summary>
 Parses a string to obtain the correct parameter value
 </summary>
 <result>The parsed value</result>
</member>
<member name="T:FLEXYGO.Gipe.GipeChildStep">
 <summary>
 Class GipeChildStep
 Represents a child step of a Step
 </summary>
</member>
<member name="T:FLEXYGO.Gipe.GipeExecution">
 <summary>
 Class GipeExecution
 Controls an actual execution of a workflow process
 </summary>
</member>
<member name="M:FLEXYGO.Gipe.GipeExecution.InitParams">
 <summary>
 Initializes the execution parameters
 </summary>
</member>
<member name="M:FLEXYGO.Gipe.GipeExecution.InitContext">
 <summary>
 Initializes the execution context
 </summary>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.WorkflowId">
 <summary>
 Workflow process identifier
 </summary>
 <value>The workflow identifier.</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.Entity">
 <summary>
 Current entity 
 </summary>
 <value>The entity.</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.UserId">
 <summary>
 Current user 
 </summary>
 <value>The entity.</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.LastException">
 <summary>
 Last exception 
 </summary>
 <value>The exception</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.ConfToken">
 <summary>
 Current conftoken 
 </summary>
 <value>The conftoken.</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.DataManager">
 <summary>
 Current datamanager 
 </summary>
 <value>The conftoken.</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.ExecutionId">
 <summary>
 Current execution identifier
 </summary>
 <value>The identifier.</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.ParentExecutionId">
 <summary>
 Parent execution execution identifier
 </summary>
 <value>The parent identifier.</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.MasterExecutionId">
 <summary>
 Master execution identifier
 </summary>
 <value>The parent identifier.</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.State">
 <summary>
 Returns the current state of the execution
 </summary>
 <value>The state</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.Result">
 <summary>
 Returns the result of the execution
 </summary>
 <value>The result</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.CancelToken">
 <summary>
 Returns the cancellation token of the execution
 </summary>
 <value>The cancellation token</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.Context">
 <summary>
 Returns the current context
 </summary>
 <value>The context</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.WorkingSteps">
 <summary>
 Returns the current steps
 </summary>
 <value>A list of GipeSteps</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.FinishedSteps">
 <summary>
 Returns the finished steps
 </summary>
 <value>A list of GipeSteps</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.ParentStep">
 <summary>
 Returns the parent step of the execution
 </summary>
 <value>The result</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.DebugMode">
 <summary>
 Returns if the execution is in debug mode
 </summary>
 <value>The result</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.LastStep">
 <summary>
 Last executed step
 </summary>
 <value>The step.</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.NextStep">
 <summary>
 Next step to execute in debug mode
 </summary>
 <value>The step.</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.ChildExecutions">
 <summary>
 List of child workflow executions 
 </summary>
 <value>The list.</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.Parameters">
 <summary>
 Dictionary of GIPE parameters of the workflow
 </summary>
 <value>The dictionary</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.NodeId">
 <summary>
 Returns the workflow node identifier
 </summary>
 <value>The node identifier</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.StepOver">
 <summary>
 Gets or sets if the workflow has to step over child workflows 
 </summary>
 <value>The node identifier</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeExecution.OmmitedSteps">
 <summary>
 Returns the ommited steps
 </summary>
 <value>A list of string of the node step id</value>
</member>
<member name="M:FLEXYGO.Gipe.GipeExecution.GetStepByNodeId(System.String)">
 <summary>
 Returns the a step by its node Id
 </summary>
 <result>The result</result>
</member>
<member name="M:FLEXYGO.Gipe.GipeExecution.Start">
 <summary>
 Starts the workflow excuetion
 </summary>
 <result>A task of the result</result>
</member>
<member name="M:FLEXYGO.Gipe.GipeExecution.OmmitStep(System.String)">
 <summary>
 Adds a ommited step
 </summary>
</member>
<member name="M:FLEXYGO.Gipe.GipeExecution.CreateStep(System.String)">
 <summary>
 Creates as new Step
 </summary>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.State">
 <summary>
 Returns the current state of the execution
 </summary>
 <value>The state</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.Id">
 <summary>
 Returns the current execution detail id
 </summary>
 <value>The state</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.ExecutionId">
 <summary>
 Returns the current execution  id
 </summary>
 <value>The execution id</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.UserId">
 <summary>
 Current user 
 </summary>
 <value>The entity.</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.NodeId">
 <summary>
 Returns the current node identifier
 </summary>
 <value>The node identifier</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.GraphId">
 <summary>
 Returns the current graph identifier
 </summary>
 <value>The graph identifier</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.Entity">
 <summary>
 Returns the current entity
 </summary>
 <value>The node identifier</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.ProcessName">
 <summary>
 Returns the process name
 </summary>
 <value>The state</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.Result">
 <summary>
 Returns the step result
 </summary>
 <value>The result</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.PendingChildren">
 <summary>
 Returns the pending children node list
 </summary>
 <value>The result</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.ErrorMessage">
 <summary>
 Returns the error message
 </summary>
 <value>The result</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.LastException">
 <summary>
 Returns the last exception
 </summary>
 <value>The Exception</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.Parents">
 <summary>
 Returns the parent nodes of the current node
 </summary>
 <value>The state</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.Context">
 <summary>
 Returns the current context
 </summary>
 <value>The context</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.MasterExecutionId">
 <summary>
 Master execution identifier
 </summary>
 <value>The parent identifier.</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.Parameters">
 <summary>
 Collection of parameters
 </summary>
 <value>The parent identifier.</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.ThreadId">
 <summary>
 Internal number of thread
 </summary>
 <value>The parent identifier.</value>
</member>
<member name="P:FLEXYGO.Gipe.GipeStep.StepType">
 <summary>
 Gets the step type
 </summary>
 <value>The step type.</value>
</member>
<member name="M:FLEXYGO.Gipe.GipeStep.Workflow">
 <summary>
 Returns the current workflow execution
 </summary>
 <return>The execution</return>
</member>
<member name="M:FLEXYGO.Gipe.GipeStep.InitParams(FLEXYGO.Gipe.GipeExecution)">
 <summary>
 Initializes the execution parameters
 </summary>
</member>
<member name="T:FLEXYGO.Gipe.eGipeWorkflowExecutionState">
 <summary>
 Workflow execution state enumration
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowExecutionState.Initiliazing">
 <summary>
 Initializing state
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowExecutionState.Running">
 <summary>
 Running state
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowExecutionState.Paused">
 <summary>
 Paused state
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowExecutionState.Finished">
 <summary>
 Finished state
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowExecutionState.Aborted">
 <summary>
 Aborted state
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowExecutionState.Waiting">
 <summary>
 Waiting state
 </summary>
</member>
<member name="T:FLEXYGO.Gipe.eGipeWorkflowExecutionResult">
 <summary>
 Workflow execution result enumeration
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowExecutionResult.NoResult">
 <summary>
 Execution has not finished
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowExecutionResult.OK">
 <summary>
 Execution well ok
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowExecutionResult.Error">
 <summary>
 Execution finished with one or more errors
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowExecutionResult.Warning">
 <summary>
 Execution Finished with one or more warning
 </summary>
</member>
<member name="T:FLEXYGO.Gipe.eGipeWorkflowStepState">
 <summary>
 Workflow step state enumration
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepState.Initiliazing">
 <summary>
 Initializing state
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepState.Running">
 <summary>
 Running state
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepState.Paused">
 <summary>
 Paused state
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepState.Finished">
 <summary>
 Finished state
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepState.Aborted">
 <summary>
 Aborted state
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepState.Waiting">
 <summary>
 Waiting user input
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepState.Ommited">
 <summary>
 Ommited
 </summary>
</member>
<member name="T:FLEXYGO.Gipe.eGipeWorkflowStepType">
 <summary>
 Workflow step type enumration (Table: Workflows_Nodes_Types)
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepType.ObjectType">
 <summary>
 Object Type
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepType.ProcessType">
 <summary>
 Process type
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepType.DecissionType">
 <summary>
 Workflow type
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepType.WorkflowType">
 <summary>
 Decision type
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepType.EventType">
 <summary>
 Event Type
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepType.LabelType">
 <summary>
 Label Type
 </summary>
</member>
<member name="T:FLEXYGO.Gipe.eGipeWorkflowStepResult">
 <summary>
 Workflow step result enumeration
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepResult.NoResult">
 <summary>
 Execution has not finished
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepResult.OK">
 <summary>
 Execution well ok
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepResult.Error">
 <summary>
 Execution finished with one or more errors
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeWorkflowStepResult.Warning">
 <summary>
 Execution Finished with one or more warning
 </summary>
</member>
<member name="T:FLEXYGO.Gipe.GipeFinishedStepEventArgs">
 <summary>
 Workflow step result enumeration
 </summary>
</member>
<member name="T:FLEXYGO.Gipe.eGipeParameterOrigin">
 <summary>
 Class eGipeParameterOrigin
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeParameterOrigin.Node">
 <summary>
 Parameter is obtained from another node in the workflow
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeParameterOrigin.Workflow">
 <summary>
 Parameter is obtained from parent workflow parameters
 </summary>
</member>
<member name="F:FLEXYGO.Gipe.eGipeParameterOrigin.Context">
 <summary>
 Parameter is obtained from a context var
 </summary>
</member>
<member name="T:FLEXYGO.Gipe.GipeStepConfiguration">
 <summary>
 Class GipeStepConfiguration
 </summary>
</member>
<member name="T:FLEXYGO.Processing.ProcessManager">
 <summary>
 Class ProcessManager.
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ProcessName">
 <summary>
 The process name
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ConfToken">
 <summary>
 The conf token
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.Config">
 <summary>
 The configuration
 </summary>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager.#ctor(System.String,FLEXYGO.Configuration.Tokens.ConfToken)">
 <summary>
 Initializes a new instance of the <see cref="T:FLEXYGO.Processing.ProcessManager"/> class.
 </summary>
 <param name="ProcessName">Name of the process.</param>
 <param name="aConfToken">a conf token.</param>
 <exception cref="T:System.Exception">Can't find ProcessName in database</exception>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager.run(FLEXYGO.Objects.IEntity,FLEXYGO.Utilities.General.KeyValuePairs[]@,System.Boolean)">
 <summary>
 Runs the specified entity.
 </summary>
 <param name="entity">The entity.</param>
 <param name="AdditionalProcessParams">The additional process parameters.</param>
 <param name="LogAction">Optional enable or dissable process log </param>
 <returns>ProcessHelper.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager.runProcessChain(FLEXYGO.Objects.IEntity,FLEXYGO.Utilities.General.KeyValuePairs[],System.String)">
 <summary>
 Runs the process and every related subprocess.
 </summary>
 <returns>ProcessHelper.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager.runProcessChainFromUntil(FLEXYGO.Objects.IEntity,FLEXYGO.Utilities.General.KeyValuePairs[],System.String,System.String)">
 <summary>
 Runs the process and every related subprocess until the UntilProcess which isn't executed.
 </summary>
 <returns>ProcessHelper.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager.GetParamList(FLEXYGO.Utilities.General.BaseCollection,System.String)">
 <summary>
 Gets the process parameter list.
 </summary>
 <param name="Params">The parameters.</param>
 <returns><c>true</c> if process is stored procedure or dll, <c>false</c> otherwise.</returns>
 <exception cref="T:FLEXYGO.Exceptions.LocalizedException">Error getting process {0} params</exception>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager._getDefaultControlType(System.String)">
 <summary>
 Gets the default type of the control.
 </summary>
 <param name="ParameterTypeName">The parameter type.</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager._getParamTypeID(System.String)">
 <summary>
 Gets the default parameter typeID.
 </summary>
 <param name="ParameterTypeName">The parameter type.</param>
 <returns>System.String.</returns>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager._getDllProcessParams(FLEXYGO.Utilities.General.BaseCollection@,System.String)">
 <summary>
 Gets the DLL process parameters.
 </summary>
 <param name="ParamList">The parameter list.</param>
 <returns><c>true</c> if able, <c>false</c> otherwise.</returns>
 <exception cref="T:FLEXYGO.Exceptions.LocalizedException">
 Class Name {0} Not found
 or
 Method {0} not found or declared as private
 or
 Could not load parameters for dll process {0}.
 </exception>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager._logProcessActions(FLEXYGO.Objects.IEntity,System.String,FLEXYGO.Utilities.General.BaseCollection,System.DateTime)">
 <summary>
 logs every time a process is run
 </summary>
 <param name="Entity">The entity object</param>
 <param name="ProcessName">The Process Id</param>
 <param name="Params">The process parameters.</param>
 <param name="Starttime">Time process started</param>
 <exception cref="T:System.Exception"></exception>
 <exception cref="T:System.Data.DataException"></exception>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager.LogExternalAction(FLEXYGO.Configuration.Tokens.ConfToken,System.DateTime,System.DateTime,System.String,System.String,System.Object,System.Object)">
 <summary>
 Logs the execution of external process.
 </summary>
 <param name="ConfToken">ConfToken to get username and userId</param>
 <param name="Message">The log Message</param>
 <param name="processName">The processName.</param>
 <param name="ObjectName">The ObjectName.</param>
 <param name="ObjectKey">The object key</param>
 <exception cref="T:System.Exception"></exception>
 <exception cref="T:System.Data.DataException"></exception>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager._getLogMessage(FLEXYGO.Objects.IEntity)">
 <summary>
 gets log message based on process Flow text
 </summary>
 <param name="Entity">The entity object</param>
 <returns>Returns string with SQL sentences</returns>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager.ParseString(FLEXYGO.Objects.IEntity,System.String)">
 <summary>
 Parses the string {{property}} against default values and object properties.
 " The {{ProcessName}} was run " would result in "The Xprocess was run"
 </summary>
 <param name="Entity">The entityObject to obtain values from</param>
 <param name="str">The string to parse.</param>
 <returns>System.String.</returns>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager.prepareParams(FLEXYGO.Objects.IEntity,FLEXYGO.Utilities.General.KeyValuePairs[])">
 <summary>
 Prepares the parameters.
 </summary>
 <param name="entity">The entity.</param>
 <param name="AdditionalProcessParams">The additional process parameters.</param>
 <returns>BaseCollection.</returns>
 <exception cref="T:System.Exception">Error preparing process parameters</exception>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager.GetDataObject(System.String,System.String)">
 <summary>
 Gets corresponding object type depending on string value
 </summary>
 <param name="ParamName">The parameter name.</param>
 <param name="Str">The string.</param>
 <returns>The value of the parameter</returns>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager.runStoredProcedureProcess(FLEXYGO.Utilities.General.BaseCollection,FLEXYGO.Processing.ProcessManager.ProcessHelper@)">
 <summary>
 Runs the stored procedure process.
 </summary>
 <param name="Params">The parameters.</param>
 <param name="Ret">The ret.</param>
 <exception cref="T:System.Exception"></exception>
</member>
<member name="M:FLEXYGO.Processing.ProcessManager.runDllProcess(FLEXYGO.Utilities.General.BaseCollection@,FLEXYGO.Objects.IEntity,FLEXYGO.Processing.ProcessManager.ProcessHelper@)">
 <summary>
 Runs the DLL process.
 </summary>
 <param name="Params">The parameters.</param>
 <param name="Entity">The entity.</param>
 <param name="Ret">The ret.</param>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.PropertyName">
 <summary>
 The Propert yName
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.changeSQL">
 <summary>
 Flag for change SQL
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.newSQL">
 <summary>
 The new SQL
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.newSqlItems">
 <summary>
 The new SQL items
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.changeValue">
 <summary>
 Flag for change Value
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.newValue">
 <summary>
 The new Value
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.changeEnabled">
 <summary>
 Flag for change Enabled property
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.newEnabled">
 <summary>
 New enabled value
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.changeVisibility">
 <summary>
 Flag for change Visibility property
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.newVisibility">
 <summary>
 New visibility value
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.changeClass">
 <summary>
 Flag for change CSS class
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.newClass">
 <summary>
 The new CSS class
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.changeRequired">
 <summary>
 Flag for change Required property
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.newRequired">
 <summary>
 The new Required value
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.cascadeDependencies">
 <summary>
 Process dependencies in cascade
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.changeCustomProperty">
 <summary>
 Flag for change Custom Property
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.newCustomProperty">
 <summary>
 The new Custom Property
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FormAction.JSCode">
 <summary>
 JSCode to execute
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FilterAction.PropertyName">
 <summary>
 The Propert yName
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FilterAction.changeSQL">
 <summary>
 Flag for change SQL
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FilterAction.newSQL">
 <summary>
 The new SQL
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.FilterAction.newSqlItems">
 <summary>
 The new SQL items
 </summary>
</member>
<member name="T:FLEXYGO.Processing.ProcessManager.ProcessHelper">
 <summary>
 Class ProcessHelper.
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ProcessHelper.Success">
 <summary>
 The success
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ProcessHelper.SuccessMessage">
 <summary>
 The success message
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ProcessHelper.WarningMessage">
 <summary>
 The warning message
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ProcessHelper.LastException">
 <summary>
 The last exception
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ProcessHelper.LastAfterProcessName">
 <summary>
 Tells the last executed process that comes after having already done an insertion/update/delete
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ProcessHelper.LastProcessName">
 <summary>
 Tells the last executed process
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ProcessHelper.MoreProcesses">
 <summary>
 Tells if the process ended to execute more processes by js
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ProcessHelper.JSCode">
 <summary>
 The js code
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ProcessHelper.JSFile">
 <summary>
 The js file
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ProcessHelper.CloseParamWindow">
 <summary>
 Close process Parameter Window
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ProcessHelper.ClearSelectionBag">
 <summary>
 Clear selection bag process
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ProcessHelper.Refresh">
 <summary>
 Process causes refresh.
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ProcessHelper.ConfToken">
 <summary>
 configuration token.
 </summary>
</member>
<member name="F:FLEXYGO.Processing.ProcessManager.ProcessHelper.LastExecutedProcess">
 <summary>
 Lasst executed process of a js proceess cahin
 </summary>
</member>
</members>
</doc>
